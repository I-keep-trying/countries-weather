{"version":3,"sources":["components/Header.js","components/Footer.js","images/weather-animated/index.js","images/weather-animated/day.svg","images/weather-animated/night.svg","images/weather-animated/cloudy-day-1.svg","images/weather-animated/cloudy-night-1.svg","images/weather-animated/clouds-scattered-day.svg","images/weather-animated/clouds-scattered-night.svg","images/weather-animated/broken-clouds-day.svg","images/weather-animated/broken-clouds-night.svg","images/weather-animated/rainy-1.svg","images/weather-animated/rainy-4.svg","images/weather-animated/rainy-3.svg","images/weather-animated/rainy-5.svg","images/weather-animated/thunder-day.svg","images/weather-animated/thunder-night.svg","images/weather-animated/snowy-3.svg","images/weather-animated/snowy-6.svg","images/weather-animated/mist-day.svg","images/weather-animated/mist-night.svg","components/Weather.js","pages/Country.js","pages/Countries.js","App.js","theme.js","index.js"],"names":["ThemeToggle","useColorMode","colorMode","toggleColorMode","aria-label","icon","Moon","onClick","variant","Sun","Filter","input","onChange","inputRef","useRef","useEffect","current","focus","ml","ref","value","placeholder","Search","Navbar","handleChange","setInput","setRegion","setSubRegion","useState","scrollPosition","setScrollPosition","handleScroll","position","window","pageYOffset","header","document","getElementById","style","top","transition","addEventListener","passive","removeEventListener","id","bg","useColorModeValue","align","justify","w","h","shadow","as","mr","Footer","pt","fontSize","Images","path","alt","WeatherIcon","src","Details","title","spacing","borderBottom","borderBottomColor","pl","DetailsList","weather","feels","wind","hum","press","p","mt","main","feels_like","speed","humidity","pressure","WeatherWidget","unit","setUnit","code","date","moment","unix","dt","format","borderTopLeftRadius","borderTopRightRadius","className","mb","colorScheme","size","isChecked","e","preventDefault","description","display","sm","base","md","lg","Math","round","temp","borderBottomLeftRadius","borderBottomRightRadius","textAlign","Country","country","isLoading","setIsLoading","setWeather","isWeatherLoading","setIsWeatherLoading","localStorage","getItem","name","JSON","parse","setTimeout","removeItem","lat","latlng","lon","url","process","axios","get","then","response","data","setItem","stringify","isFitted","isLazy","borderWidth","borderRadius","flag","href","isExternal","label","color","ExternalLink","mx","isNumeric","nativeName","capital","population","toLocaleString","languages","map","lang","Weather","Countries","countries","regions","subregion","details","setDetails","console","log","length","result","reset","r","region","target","undefined","subregions","sr","i","c","App","filteredCountries","countriesList","filter","toLowerCase","startsWith","filterByRegion","filterBySubregion","Header","event","maxW","extendTheme","styles","global","h6","_hover","bgGradient","bgClip","a","textDecoration","_active","initialColorMode","components","Heading","variants","Link","ReactDOM","render","theme"],"mappings":"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","file":"static/js/main.fa24a685.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\nimport {\r\n  IconButton,\r\n  useColorMode,\r\n  Box,\r\n  Flex,\r\n  useColorModeValue,\r\n  Heading,\r\n  Spacer,\r\n  Input,\r\n  InputRightElement,\r\n  InputGroup,\r\n} from '@chakra-ui/react'\r\nimport { SunIcon, MoonIcon, SearchIcon } from '@chakra-ui/icons'\r\n\r\nexport const ThemeToggle = () => {\r\n  const { colorMode, toggleColorMode } = useColorMode()\r\n  return (\r\n    <>\r\n      {colorMode === 'light' ? (\r\n        <IconButton\r\n          aria-label=\"dark mode\"\r\n          icon={<MoonIcon />}\r\n          onClick={toggleColorMode}\r\n          variant=\"link\"\r\n        />\r\n      ) : (\r\n        <IconButton\r\n          aria-label=\"light mode\"\r\n          icon={<SunIcon />}\r\n          onClick={toggleColorMode}\r\n          variant=\"link\"\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nconst Filter = ({ input, onChange }) => {\r\n  const inputRef = useRef()\r\n\r\n  useEffect(() => {\r\n    inputRef.current.focus()\r\n  })\r\n\r\n  return (\r\n    <Box ml={6}>\r\n      <form>\r\n        <InputGroup>\r\n          <Input\r\n            ref={inputRef}\r\n            value={input}\r\n            onChange={onChange}\r\n            placeholder=\"Start typing to search\"\r\n          />\r\n          <InputRightElement>{<SearchIcon />}</InputRightElement>\r\n        </InputGroup>\r\n      </form>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport const Navbar = ({\r\n  input,\r\n  handleChange,\r\n  setInput,\r\n  setRegion,\r\n  setSubRegion,\r\n}) => {\r\n  const [scrollPosition, setScrollPosition] = useState(0)\r\n\r\n  const handleScroll = () => {\r\n    const position = window.pageYOffset\r\n    const header = document.getElementById('header-wrap')\r\n\r\n    setScrollPosition(position)\r\n    if (position > scrollPosition + 25 || position < 100) {\r\n      header.style.top = '-8em'\r\n      header.style.transition = 'top 666ms'\r\n    }\r\n    if (position < scrollPosition - 25 || position < 75) {\r\n      header.style.top = '0'\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const header = document.getElementById('header-wrap')\r\n    header.style.top = '0'\r\n    window.addEventListener('scroll', handleScroll, { passive: true })\r\n    return () => {\r\n      window.removeEventListener('scroll', handleScroll)\r\n    }\r\n  }, [])\r\n\r\n  const reset = () => {\r\n    setInput('')\r\n    setRegion('All')\r\n    setSubRegion('')\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Flex\r\n        id=\"header-wrap\"\r\n        bg={useColorModeValue('white', 'gray.800')}\r\n        align=\"center\"\r\n        justify=\"flex-end\"\r\n        w=\"100%\"\r\n        h=\"10%\"\r\n        shadow=\"base\"\r\n      >\r\n        <Box ml={4}>\r\n          <Heading\r\n            as=\"button\"\r\n            onClick={reset}\r\n            variant={useColorModeValue(\r\n              'with-gradient-light',\r\n              'with-gradient-dark'\r\n            )}\r\n          >\r\n            World Countries\r\n          </Heading>\r\n        </Box>\r\n        <Filter input={input} onChange={handleChange} />\r\n        <Spacer />\r\n        <Box mr={4} w=\"5%\">\r\n          <ThemeToggle />\r\n        </Box>\r\n      </Flex>\r\n    </>\r\n  )\r\n}\r\nexport default Navbar\r\n","import React from 'react'\r\nimport { Center, Text, Box,  useColorModeValue } from '@chakra-ui/react'\r\n\r\nfunction Footer() {\r\n  return (\r\n    <Box bg={useColorModeValue('white', 'gray.800')} id=\"footer-wrap\">\r\n      <Center h=\"10px\" pt=\"5\">\r\n        <Text fontSize=\"xs\">Made by Andrea Crego</Text>\r\n      </Center>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import clearDay from './day.svg'\nimport clearNight from './night.svg'\n\nimport cloudyDay from './cloudy-day-1.svg'\nimport cloudyNight from './cloudy-night-1.svg'\n\nimport scatteredCloudsDay from './clouds-scattered-day.svg'\nimport scatteredCloudsNight from './clouds-scattered-night.svg'\n\nimport brokenCloudsDay from './broken-clouds-day.svg'\nimport brokenCloudsNight from './broken-clouds-night.svg'\n\nimport showerDay from './rainy-1.svg'\nimport showerNight from './rainy-4.svg'\n\nimport rainyDay from './rainy-3.svg'\nimport rainyNight from './rainy-5.svg'\n\nimport thunderDay from './thunder-day.svg'\nimport thunderNight from './thunder-night.svg'\n\nimport snowyDay from './snowy-3.svg'\nimport snowyNight from './snowy-6.svg'\n\nimport mistDay from './mist-day.svg'\nimport mistNight from './mist-night.svg'\n\nconst Images = {\n  '01d': {\n    id: '01d',\n    path: clearDay,\n    alt: 'clear day',\n  },\n  '01n': {\n    id: '01n',\n    path: clearNight,\n    alt: 'clear night',\n  },\n  '02d': {\n    id: '02d',\n    path: cloudyDay,\n    alt: 'cloudy day',\n  },\n\n  '02n': {\n    id: '02n',\n    path: cloudyNight,\n    alt: 'cloudy night',\n  },\n\n  '03d': {\n    id: '03d',\n    path: scatteredCloudsDay,\n    alt: 'scattered clouds day',\n  },\n  '03n': {\n    id: '03n',\n    path: scatteredCloudsNight,\n    alt: 'scattered clouds night',\n  },\n  '04d': {\n    id: '04d',\n    path: brokenCloudsDay,\n    alt: 'broken clouds day',\n  },\n\n  '04n': {\n    id: '04n',\n    path: brokenCloudsNight,\n    alt: 'broken clouds night',\n  },\n\n  '09d': {\n    id: '09d',\n    path: showerDay,\n    alt: 'shower day',\n  },\n  '09n': {\n    id: '09n',\n    path: showerNight,\n    alt: 'shower night',\n  },\n  '10d': {\n    id: '10d',\n    path: rainyDay,\n    alt: 'rainy day',\n  },\n  '10n': {\n    id: '10n',\n    path: rainyNight,\n    alt: 'rainy night',\n  },\n  '11d': {\n    id: '11d',\n    path: thunderDay,\n    alt: 'thunder day',\n  },\n  '11n': {\n    id: '11n',\n    path: thunderNight,\n    alt: 'thunder night',\n  },\n  '13d': {\n    id: '13d',\n    path: snowyDay,\n    alt: 'snowy day',\n  },\n  '13n': {\n    id: '13n',\n    path: snowyNight,\n    alt: 'snowy night',\n  },\n  '50d': {\n    id: '50d',\n    path: mistDay,\n    alt: 'mist day',\n  },\n  '50n': {\n    id: '50n',\n    path: mistNight,\n    alt: 'mist night',\n  },\n}\n\nexport default Images\n","export default __webpack_public_path__ + \"static/media/day.096b1175.svg\";","export default __webpack_public_path__ + \"static/media/night.3a5b9f57.svg\";","export default __webpack_public_path__ + \"static/media/cloudy-day-1.485db1d7.svg\";","export default __webpack_public_path__ + \"static/media/cloudy-night-1.31db38af.svg\";","export default __webpack_public_path__ + \"static/media/clouds-scattered-day.4ebe4308.svg\";","export default __webpack_public_path__ + \"static/media/clouds-scattered-night.b2fdabaa.svg\";","export default __webpack_public_path__ + \"static/media/broken-clouds-day.93d9e05d.svg\";","export default __webpack_public_path__ + \"static/media/broken-clouds-night.0ee7ff13.svg\";","export default __webpack_public_path__ + \"static/media/rainy-1.ca51ee00.svg\";","export default __webpack_public_path__ + \"static/media/rainy-4.9145687f.svg\";","export default __webpack_public_path__ + \"static/media/rainy-3.c87f2444.svg\";","export default __webpack_public_path__ + \"static/media/rainy-5.3123af7a.svg\";","export default __webpack_public_path__ + \"static/media/thunder-day.3d169914.svg\";","export default __webpack_public_path__ + \"static/media/thunder-night.f31c3284.svg\";","export default __webpack_public_path__ + \"static/media/snowy-3.21145f25.svg\";","export default __webpack_public_path__ + \"static/media/snowy-6.f096b2f1.svg\";","export default __webpack_public_path__ + \"static/media/mist-day.b3406414.svg\";","export default __webpack_public_path__ + \"static/media/mist-night.b3894aee.svg\";","import React from 'react'\nimport {\n  Box,\n  Image,\n  Heading,\n  VStack,\n  HStack,\n  Stack,\n  Text,\n  Container,\n  Switch,\n  Center,\n} from '@chakra-ui/react'\nimport moment from 'moment'\nimport Images from '../images/weather-animated/index'\nimport '../owm-right.css'\n\nfunction WeatherIcon({ src, alt }) {\n  return (\n    <Box>\n      <Image src={src} alt={alt} />\n    </Box>\n  )\n}\n\nfunction Details({ title }) {\n  return (\n    <Stack spacing={0}>\n      <Box borderBottom=\"1px\" borderBottomColor=\"cyan.400\" pl={1} mr={2}>\n        <Heading fontSize=\"l\">{title}</Heading>\n      </Box>\n    </Stack>\n  )\n}\n\nfunction DetailsList({ weather, feels, wind, hum, press }) {\n  return (\n    <Stack spacing={0}>\n      <Box p={1}>\n        <HStack>\n          <Text w=\"50%\" fontSize=\"sm\" mt={0}>\n            {feels}\n          </Text>\n          <Text as=\"strong\" fontSize=\"sm\" mt={0}>\n            {weather.main.feels_like}\n          </Text>\n        </HStack>\n\n        <HStack>\n          <Text w=\"50%\" fontSize=\"sm\" mt={0}>\n            {wind}\n          </Text>\n          <Text as=\"strong\" fontSize=\"sm\" mt={0}>\n            {weather.wind.speed} mph\n          </Text>\n        </HStack>\n\n        <HStack>\n          <Text w=\"50%\" fontSize=\"sm\" mt={0}>\n            {hum}\n          </Text>\n          <Text as=\"strong\" fontSize=\"sm\" mt={0}>\n            {weather.main.humidity}%\n          </Text>\n        </HStack>\n\n        <HStack>\n          <Text w=\"50%\" fontSize=\"sm\" mt={0}>\n            {press}\n          </Text>\n          <Text as=\"strong\" fontSize=\"sm\" mt={0}>\n            {weather.main.pressure} hPa\n          </Text>\n        </HStack>\n      </Box>\n    </Stack>\n  )\n}\n\nfunction WeatherWidget({ weather, unit, setUnit }) {\n  const code = weather.weather[0].icon\n  const icon = Images[code].path\n  const alt = Images[code].alt\n  const date = moment.unix(weather.dt).format('YYYY-MM-DD, h:mm a')\n\n  const setToggle = e => {\n    e.preventDefault()\n    if (unit === 'metric') {\n      setUnit('imperial')\n      return true\n    } else {\n      setUnit('metric')\n      return false\n    }\n  }\n\n  return (\n    <>\n      <Box id=\"weather Box\" shadow=\"md\" w=\"100%\">\n        <VStack\n          borderTopLeftRadius=\"20px\"\n          borderTopRightRadius=\"20px\"\n          className=\"widget-right--brown\"\n          spacing={0}\n          align=\"stretch\"\n        >\n          <HStack spacing={0}>\n            <Container>\n              <HStack>\n                <Text fontSize=\"40px\" mb={2}>\n                  C\n                </Text>\n                <Switch\n                  colorScheme=\"whiteAlpha\"\n                  size=\"lg\"\n                  value={unit}\n                  isChecked={unit === 'imperial'}\n                  onChange={setToggle}\n                />\n                <Text fontSize=\"40px\" mb={2}>\n                  F\n                </Text>\n              </HStack>\n\n              <Text fontSize=\"30px\">{weather.weather[0].description}</Text>\n            </Container>\n            <WeatherIcon src={icon} alt={alt} />\n          </HStack>\n        </VStack>\n\n        <HStack\n          display={{ sm: 'flex' }}\n          spacing={0}\n        >\n          <Center w=\"40%\">\n            <Text\n              fontSize={{ base:\"50px\", md: '60px', lg: '70px' }}\n              as=\"strong\"\n            >\n              {Math.round(weather.main.temp)}\n              <Text as=\"sup\">°</Text>\n              {unit === 'metric' ? 'C' : 'F'}\n            </Text>\n          </Center>\n\n          <Stack w=\"60%\" p={5}>\n            <Details title=\"Details\" />\n            <DetailsList\n              feels=\"Feels like\"\n              wind=\"Wind\"\n              hum=\"Humidity\"\n              press=\"Pressure\"\n              weather={weather}\n            />\n          </Stack>\n        </HStack>\n        <HStack\n          borderBottomLeftRadius=\"20px\"\n          borderBottomRightRadius=\"20px\"\n          className=\"widget-right--brown\"\n        >\n          <Container textAlign=\"right\" spacing={0}>\n            <Text fontSize=\"14px\">Reported: {date} </Text>\n          </Container>\n        </HStack>\n      </Box>\n    </>\n  )\n}\n\nexport default WeatherWidget\n","import React, { useState, useEffect } from 'react'\nimport {\n  Table,\n  Thead,\n  Tbody,\n  Tr,\n  Th,\n  Td,\n  Box,\n  VStack,\n  Link,\n  Tooltip,\n  Heading,\n  Text,\n  Image,\n  Tabs,\n  TabList,\n  TabPanels,\n  Tab,\n  TabPanel,\n  Button,\n  Center,\n} from '@chakra-ui/react'\nimport { ExternalLinkIcon } from '@chakra-ui/icons'\nimport axios from 'axios'\nimport Weather from '../components/Weather'\n\nconst Country = ({\n  country,\n  isLoading,\n  setInput,\n  setRegion,\n  setSubRegion,\n  setIsLoading,\n}) => {\n  const [weather, setWeather] = useState({})\n  const [unit, setUnit] = useState('metric')\n  const [isWeatherLoading, setIsWeatherLoading] = useState(true)\n\n  useEffect(() => {\n    if (!isLoading) {\n      if (\n        unit === 'metric' &&\n        window.localStorage.getItem(`${country.name} weather in metric`) !==\n          null\n      ) {\n        setIsWeatherLoading(true)\n        setWeather(\n          JSON.parse(\n            window.localStorage.getItem(`${country.name} weather in metric`)\n          )\n        )\n        setIsWeatherLoading(false)\n        setIsLoading(false)\n        setTimeout(() => {\n          window.localStorage.removeItem(`${country.name} weather in metric`)\n        }, 10000)\n      } else if (\n        unit === 'imperial' &&\n        window.localStorage.getItem(`${country.name} weather in imperial`) !==\n          null\n      ) {\n        setIsWeatherLoading(true)\n        setWeather(\n          JSON.parse(\n            window.localStorage.getItem(`${country.name} weather in imperial`)\n          )\n        )\n        setIsWeatherLoading(false)\n        setIsLoading(false)\n        setTimeout(() => {\n          window.localStorage.removeItem(`${country.name} weather in imperial`)\n        }, 10000)\n      } else {\n        const lat = Math.round(country.latlng[0])\n        const lon = Math.round(country.latlng[1])\n        setIsWeatherLoading(true)\n\n        const url = `http://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${process.env.REACT_APP_OPENWEATHER_KEY}&units=${unit}`\n\n        axios.get(url).then(response => {\n          setWeather(response.data)\n          setIsWeatherLoading(false)\n          setIsLoading(false)\n          window.localStorage.setItem(\n            `${country.name} weather in ${unit}`,\n            JSON.stringify(response.data)\n          )\n        })\n      }\n    }\n  }, [country, unit, isLoading])\n\n  const reset = () => {\n    setInput('')\n    setRegion('All')\n    setSubRegion('')\n  }\n\n  return !isLoading ? (\n    <>\n      {/*       <Container centerContent mt={100} mb={10}>\n       */}{' '}\n      <Box mb={5}>\n        <Button variant=\"ghost\" onClick={reset}>\n          Back\n        </Button>\n      </Box>\n      <Tabs isFitted isLazy>\n        <TabList>\n          <Tab>\n            <Heading\n              textAlign=\"center\"\n              fontSize=\"xl\"\n            >{`${country.name} Details`}</Heading>\n          </Tab>\n          <Tab>\n            {' '}\n            <Heading\n              textAlign=\"center\"\n              fontSize=\"xl\"\n            >{`Weather in ${country.name}`}</Heading>\n          </Tab>\n        </TabList>\n\n        <TabPanels>\n          <TabPanel mb={12}>\n            <Box\n              borderWidth=\"3px\"\n              shadow=\"md\"\n              borderRadius=\"20px\"\n              textAlign=\"left\"\n            >\n              <VStack display={{ sm: 'flex' }} spacing={4}>\n                <Image\n                  borderTopLeftRadius=\"20px\"\n                  borderTopRightRadius=\"20px\"\n                  src={country.flag}\n                  alt=\"country flag\"\n                />\n                <Table>\n                  <Thead>\n                    <Tr>\n                      <Th>\n                        <Link\n                          href=\"https://en.wikipedia.org/wiki/Endonym_and_exonym\"\n                          isExternal\n                        >\n                          <Tooltip\n                            label={\n                              <Text as=\"i\" color=\"gray.500\">\n                                An endonym (from Greek: éndon,\n                                `&#39;`inner`&#39;` + ónoma, `&#39;`name`&#39;`;\n                                also known as autonym) is a common, internal\n                                name for a geographical place, group of people,\n                                or a language/dialect, that is used only inside\n                                that particular place, group, or linguistic\n                                community.\n                              </Text>\n                            }\n                            aria-label=\"An endonym (from Greek: éndon, 'inner' + ónoma, 'name'; also known as autonym) is a common, internal name for a geographical place, group of people, or a language/dialect, that is used only inside that particular place, group, or linguistic community.\"\n                          >\n                            Endonym\n                          </Tooltip>\n                          <ExternalLinkIcon mx=\"2px\" />\n                        </Link>\n                      </Th>\n                      <Th>Capital</Th>\n                      <Th isNumeric>Population</Th>\n                    </Tr>\n                  </Thead>\n\n                  <Tbody>\n                    <Tr>\n                      <Td>{country.nativeName}</Td>\n                      <Td>{country.capital}</Td>\n                      <Td isNumeric>{country.population.toLocaleString()}</Td>\n                    </Tr>\n                  </Tbody>\n                </Table>\n                <Table mb={4} size=\"sm\">\n                  <Thead>\n                    <Tr>\n                      <Th>Languages</Th>\n                    </Tr>\n                  </Thead>\n\n                  <Tbody>\n                    {country.languages.map(lang => (\n                      <Tr key={lang.name}>\n                        <Td>{lang.name}</Td>\n                      </Tr>\n                    ))}\n                  </Tbody>\n                </Table>\n              </VStack>\n            </Box>\n          </TabPanel>\n          <TabPanel>\n            <Center\n              shadow=\"md\"\n              borderRadius=\"20px\"\n              borderWidth=\"3px\"\n              id=\"weather Center\"\n              p={0}\n            >\n              {!isWeatherLoading ? (\n                <Weather\n                  country={country}\n                  weather={weather}\n                  unit={unit}\n                  setUnit={setUnit}\n                />\n              ) : (\n                <Text>Weather loading...</Text>\n              )}\n            </Center>\n          </TabPanel>\n        </TabPanels>\n      </Tabs>\n      {/*       </Container>\n       */}{' '}\n    </>\n  ) : (\n    <Text>Loading... </Text>\n  )\n}\n\nexport default Country\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport {\n  Table,\n  Tbody,\n  Tr,\n  Td,\n  Button,\n  Tabs,\n  TabList,\n  TabPanels,\n  Tab,\n  TabPanel,\n  Select,\n  Text,\n  Stack,\n} from '@chakra-ui/react'\nimport Country from '../pages/Country'\n\nconst Countries = ({\n  countries,\n  setInput,\n  regions,\n  subregion,\n  setRegion,\n  setSubRegion,\n}) => {\n  const [details, setDetails] = useState({})\n  const [isLoading, setIsLoading] = useState(true)\n\n  console.log('isLoading', isLoading)\n  useEffect(() => {\n    if (countries.length === 1) {\n      axios\n        .get(`https://restcountries.eu/rest/v2/name/${countries[0].name}`)\n        .then(result => {\n          setDetails(result.data[0])\n          setIsLoading(false)\n        })\n    }\n  }, [countries])\n\n  const reset = () => {\n    setInput('')\n    setRegion('All')\n    setSubRegion('')\n  }\n\n  if (countries.length === 0) {\n    return (\n      <Stack>\n        <Text as=\"button\" onClick={reset}>\n          no matches\n        </Text>\n        <Button onClick={reset}>new search</Button>\n      </Stack>\n    )\n  }\n\n  if (countries.length === 1) {\n    return (\n      <Country\n        setInput={setInput}\n        setRegion={setRegion}\n        isLoading={isLoading}\n        country={details}\n        setSubRegion={setSubRegion}\n        setIsLoading={setIsLoading}\n      />\n    )\n  }\n\n  return (\n    <>\n      <Tabs isFitted isLazy>\n        <TabList>\n          {regions.map(r => {\n            const handleTabChange = () => {\n              setRegion(r.region)\n              setSubRegion('')\n            }\n            return (\n              <Tab\n                as=\"button\"\n                size=\"xs\"\n                variant=\"ghost\"\n                onClick={handleTabChange}\n                key={r.id}\n              >\n                {r.region}\n              </Tab>\n            )\n          })}\n        </TabList>\n        <TabPanels>\n          {regions.map(r => {\n            return (\n              <TabPanel p={4} key={r.id}>\n                {r.region === 'All' ? (\n                  <></>\n                ) : r.region === 'Other' ? (\n                  <></>\n                ) : (\n                  <>\n                    Filter by Subregion:\n                    <Select\n                      value={subregion}\n                      onChange={e => setSubRegion(e.target.value)}\n                    >\n                      <option></option>\n                      {r.subregions !== undefined ? (\n                        r.subregions.map((sr, i) => {\n                          return (\n                            <option key={i} value={sr}>\n                              {sr}\n                            </option>\n                          )\n                        })\n                      ) : (\n                        <></>\n                      )}\n                    </Select>{' '}\n                  </>\n                )}\n                <Table>\n                  <Tbody>\n                    {countries.map(c => {\n                      const handleClick = () => {\n                        setIsLoading(true)\n                        setInput(c.name)\n                      }\n                      return (\n                        <Tr key={c.id}>\n                          <Td>{c.name}</Td>\n\n                          <Td>\n                            <Button\n                              size=\"xs\"\n                              variant=\"ghost\"\n                              onClick={handleClick}\n                            >\n                              details\n                            </Button>\n                          </Td>\n                        </Tr>\n                      )\n                    })}\n                  </Tbody>\n                </Table>\n              </TabPanel>\n            )\n          })}\n        </TabPanels>\n      </Tabs>\n    </>\n  )\n}\n\nexport default Countries\n","import React, { useState } from 'react'\r\nimport { Container } from '@chakra-ui/react'\r\nimport countriesList from './countriesList'\r\nimport regions from './regions'\r\nimport Header from './components/Header'\r\nimport Footer from './components/Footer'\r\nimport Countries from './pages/Countries'\r\nimport './App.css'\r\n\r\nconst App = () => {\r\n  const [input, setInput] = useState('')\r\n  const [region, setRegion] = useState('All')\r\n  const [subregion, setSubRegion] = useState('')\r\n\r\n  const filteredCountries = countriesList.filter(c => {\r\n    /*     if (\r\n      c.name.toUpperCase().startsWith('Å') &&\r\n      input.toUpperCase().startsWith('A')\r\n    ) {\r\n      return true\r\n    } */\r\n    return c.name.toLowerCase().startsWith(input.toLowerCase())\r\n  })\r\n\r\n  /* \r\n  Future improvement handling locale specific alphabets:\r\n  const filteredCountries = countriesList.filter(c => c.name.localeCompare(b, 'en', { sensitivity: 'base' }))\r\n */\r\n\r\n  const filterByRegion =\r\n    region === 'All'\r\n      ? filteredCountries\r\n      : filteredCountries.filter(c => {\r\n          if (region.toLowerCase() === 'other') {\r\n            return c.region === ''\r\n          }\r\n          return c.region.toLowerCase() === region.toLowerCase()\r\n        })\r\n\r\n  const filterBySubregion =\r\n    subregion === ''\r\n      ? filterByRegion\r\n      : filterByRegion.filter(r => r.subregion === subregion)\r\n\r\n  const handleChange = event => {\r\n    setInput(event.target.value)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header\r\n        input={input}\r\n        setInput={setInput}\r\n        setRegion={setRegion}\r\n        setSubRegion={setSubRegion}\r\n        handleChange={handleChange}\r\n      />\r\n      <Container maxW=\"container.md\" id=\"App container\" mt={100}>\r\n        <Countries\r\n          regions={regions}\r\n          countries={filterBySubregion}\r\n          setInput={setInput}\r\n          setRegion={setRegion}\r\n          setSubRegion={setSubRegion}\r\n          subregion={subregion}\r\n        />\r\n      </Container>\r\n\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { extendTheme } from '@chakra-ui/react'\n\nconst overrides = {\n  styles: {\n    global: {\n      h6: {\n        _hover: {\n          bgGradient: 'linear(to-l, #7928CA,#FF0080)',\n          bgClip: 'text',\n        },\n      },\n      a: {\n        textDecoration: 'none',\n        _hover: {\n          bgGradient: 'linear(to-l, #7928CA,#FF0080)',\n          bgClip: 'text',\n          textDecoration: 'none',\n          _active: {\n            bgGradient: 'linear(to-l, #7928CA,#FF0080)',\n            bgClip: 'text',\n            textDecoration: 'none',\n          },\n        },\n        _active: { textDecoration: 'none' },\n      },\n    },\n  },\n  initialColorMode: 'dark',\n  components: {\n    Heading: {\n      variants: {\n        'with-gradient-light': {\n          bgGradient: 'linear(#000000,  #718096, #000000)',\n          bgClip: 'text',\n        },\n        'with-gradient-dark': {\n          bgGradient: 'linear(#FFFFFF,  #718096, #FFFFFF)',\n          bgClip: 'text',\n        },\n      },\n    },\n    Link: {\n      textDecoration: 'none',\n      _hover: {\n        textDecoration: 'none',\n      },\n      _active: { textDecoration: 'none' },\n    },\n  },\n}\nexport default extendTheme(overrides)\n","import { ColorModeScript, ChakraProvider } from '@chakra-ui/react'\r\nimport React, { StrictMode } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport extendTheme from './theme.js'\r\n//import ErrorBoundary from './ErrorBoundary'\r\n\r\nReactDOM.render(\r\n  <ChakraProvider theme={extendTheme}>\r\n    <StrictMode>\r\n      <ColorModeScript />\r\n      <App />\r\n    </StrictMode>\r\n  </ChakraProvider>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}